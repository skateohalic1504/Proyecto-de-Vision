{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Jeffrey ortiz Santan\\\\Desktop\\\\project3\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react'; //import logo from './logo.svg';\n\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport { drawHand } from \"./utilities\"; //imortando las imagenes\n\nimport * as fp from \"fingerpose\";\nimport victory from \"./victory.png\";\nimport thumbs_up from \"./thumbs_up.png\";\n\nfunction App() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Hand model Loaded.\"); // loop y detectar manos\n\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  }; //detecta las manos al igual que configura el tamano de la camara y del canvas\n\n\n  const detect = async net => {\n    //revisar si la info esta disponible\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      //propiedades del video\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; //altura y  anchura de video\n\n      webcamRef.current.width = videoWidth;\n      webcamRef.current.height = videoHeight; //tamano de canvas\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; //detecciones\n\n      const hand = await net.estimateHands(video);\n      console.log(hand);\n\n      if (hand.length > 0) {\n        const GE = new fp.GestureEstimator([fp.Gestures.VictoryGesture, fp.Gestures.ThumbsUpGesture]);\n        const gesture = await GE.estimate(hand[0].landmarks, 8);\n        console.log(gesture);\n      } //dibujar\n\n\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  runHandpose();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"AwQWgsmsPhWgADiRou0jnDEtoH4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Jeffrey ortiz Santan/Desktop/project3/src/App.js"],"names":["React","useRef","useState","tf","handpose","Webcam","drawHand","fp","victory","thumbs_up","App","webcamRef","canvasRef","runHandpose","net","load","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","hand","estimateHands","length","GE","GestureEstimator","Gestures","VictoryGesture","ThumbsUpGesture","gesture","estimate","landmarks","ctx","getContext","position","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\n//import logo from './logo.svg';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport './App.css';\nimport {drawHand} from \"./utilities\";\n\n//imortando las imagenes\nimport * as fp from \"fingerpose\";\nimport victory from \"./victory.png\";\nimport thumbs_up from \"./thumbs_up.png\"\n\nfunction App() {\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandpose = async () =>{\n    const net = await handpose.load()\n    console.log(\"Hand model Loaded.\");\n    // loop y detectar manos\n    setInterval(() =>{\n      detect(net)\n    }, 100)\n\n  };\n\n  //detecta las manos al igual que configura el tamano de la camara y del canvas\n  const detect = async (net) =>{\n    //revisar si la info esta disponible\n    if(\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      //propiedades del video\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      //altura y  anchura de video\n      webcamRef.current.width = videoWidth;\n      webcamRef.current.height = videoHeight;\n\n      //tamano de canvas\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      //detecciones\n      const hand = await net.estimateHands(video);\n      console.log(hand);\n\n      if(hand.length >0) {\n        const GE = new fp.GestureEstimator([\n          fp.Gestures.VictoryGesture,\n          fp.Gestures.ThumbsUpGesture,\n        ]);\n\n        const gesture = await GE.estimate(hand[0].landmarks, 8);\n        console.log(gesture);\n      }\n\n      //dibujar\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n\n\n  runHandpose();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam ref={webcamRef}\n        style={{\n          position: \"absolute\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex:9,\n          width: 640,\n          height: 480\n        }}/>\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex:9,\n            width: 640,\n            height: 480\n          }}/>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}